<?xml version="1.0"?>
<xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:str="http://exslt.org/strings"
>
<xsl:output
    method="html"
    indent="yes"
    encoding="UTF-8"
    doctype-public="-//W3C//DTD HTML 4.01//EN"
    doctype-system="http://www.w3.org/TR/html4/strict.dtd"
/>

<xsl:variable name="deviceid">
    <xsl:value-of select="/REQUEST/DEVICEID" />
</xsl:variable>

<xsl:variable name="version">
    <xsl:value-of select="/REQUEST/CONTENT/VERSIONCLIENT" />
</xsl:variable>

<xsl:template match="/">
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="/REQUEST">
<html>
<head>
    <title>FusionInventory-Agent {$deviceid}</title>
<style type="text/css">
h1 {
    text-align: center;
}
table {
    width: 100%;
}
tr.even {
    background-color:white;
}
tr.odd {
    background-color:silver;
}
</style>
</head>
<body>
    <h1>Inventory for <xsl:value-of select="$deviceid"/></h1>
    <small>generated by <xsl:value-of select="$version"/></small>

<hr/>

<table border="1px">
    <tr>
        <td>summary</td>
        <td><a href="#hardware">hardware</a></td>
        <td><a href="#software">software</a></td>
        <td><a href="#users">users</a></td>
        <td><a href="#environment">environment</a></td>
    </tr>
</table>

<h2><a name="summary">Summary</a></h2>

<hr/>

<table border="1px">
    <tr>
        <td><a href="#summary">summary</a></td>
        <td>hardware</td>
        <td><a href="#software">software</a></td>
        <td><a href="#users">users</a></td>
        <td><a href="#environment">environment</a></td>
    </tr>
</table>

<h2><a name="hardware">Hardware</a></h2>

<xsl:if test="CONTENT/CPUS">
    <h3>CPUs</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Cache,Core,Description,Manufacturer,Name,Thread,Serial,Stepping,Family name,Family number,Model,Speed,Id,External Clock,Architecture</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/CPUS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/MEMORIES">
    <h3>Memories</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Capacity,Caption,Form factor,Removable,Purpose,Speed,Serial number,Type,Description,Slot number,Memory correction,Manufacturer</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/MEMORIES"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/NETWORKS">
    <h3>Network interfaces</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">BSSID,Description,Driver,Firmware,IPv4 Address,IPv6 Address,DHCP server,Gateway,IPv4 mask,IPv6 mask,IPv4 subnet,IPv6 subnet,Management,Manufacturer,MAC Address,Model,MTU,PCI slot,PNP device ID,Status,Slaves,Speed,SSID,Type,Virtual device,WWN</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/NETWORKS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/CONTROLLERS">
    <h3>Controllers</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Caption,Driver,Name,Manufacturer,PCI class,Vendor ID,Product ID,PCI subsystem ID,PCI slot,Type,Revision</xsl:with-param>
            </xsl:call-template>
        <xsl:apply-templates select="CONTENT/CONTROLLERS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/INPUTS">
    <h3>Input devices</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Name,Manufacturer,Caption,Description,Interface,Layout,Pointing type,Type</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/INPUTS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/PORTS">
    <h3>Ports</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Caption,Description,Name,Type</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/PORTS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/SLOTS">
    <h3>Slots</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Description,Designation,Name,Status</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/SLOTS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/SOUNDS">
    <h3>Sound devices</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Caption,Description,Manufacturer,Name</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/SOUNDS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/VIDEOS">
    <h3>Video devices</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Chipset,Memory,Name,Resolution,PCI slot</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/VIDEOS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/MONITORS">
    <h3>Monitors</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Base64,Caption,Description,Manufacturer,Serial,UUencode</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/MONITORS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/DRIVES">
    <h3>Drives</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Creation date,Description,Free,Filesystem,Label,Letter,Serial,System drive,Total,Type,Volum name</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/DRIVES"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/STORAGES">
    <h3>Storages</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Description,Disksize,Interface,Manufacturer,Model,Name,Type,Serial,Serialnumber,Firmware,SCSICOID,SCSICHID,SCSIUNID,SCSILUN,WVN</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/STORAGES"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/USBDEVICES">
    <h3>USB devices</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Vendor ID,Product ID,Manufacturer,Caption,Serial,Class,Subclass,Name</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/USBDEVICES"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/BATTERIES">
    <h3>Batteries</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Capacity,Chemistry,Date,Name,Serial,Manufacturer,Voltage</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/BATTERIES"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/MODEMS">
    <h3>Modems</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Description,Name</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/Modems"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/PRINTERS">
    <h3>Printers</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Comment,Description,Driver,Name,Network,Port,Resolution,Shared,Status,Error status,Server name,Share name,Print processor,Serial</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/PRINTERS"/>
    </table>
</xsl:if>

<hr/>

<table border="1px">
    <tr>
        <td><a href="#summary">summary</a></td>
        <td><a href="#hardware">hardware</a></td>
        <td>software</td>
        <td><a href="#users">users</a></td>
        <td><a href="#environment">environment</a></td>
    </tr>
</table>

<h2><a name="software">Software</a></h2>

<xsl:if test="CONTENT/SOFTWARES">
    <h3>Softwares</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Comments,Filesize,Folder,From,Helplink,Installationdate,Name,Noremove,Releasetype,Publisher,Uninstallstring,URLinfoabout,Version,Versionminor,Versionmajor,GUID,Architecture,Username,UserID</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/SOFTWARES"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/ANTIVIRUS">
    <h3>Antivirus</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Company,Name,GUID,Enabled,Uptodate,Version</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/ANTIVIRUS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/VIRTUALMACHINES">
    <h3>Virtual machines</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Memory,Name,UUID,Status,Subsystem,Type,VPCU,VMID,Mac address,Comment,Owner,Serial</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/VIRTUALMACHINES"/>
    </table>
</xsl:if>

<hr/>

<table border="1px">
    <tr>
        <td><a href="#summary">summary</a></td>
        <td><a href="#hardware">hardware</a></td>
        <td><a href="#software">software</a></td>
        <td>users</td>
        <td><a href="#environment">environment</a></td>
    </tr>
</table>

<h2><a name="users">Users</a></h2>

<xsl:if test="CONTENT/USERS">
    <h3>Users</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Login,Domain</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/USERS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/LOCAL_USERS">
    <h3>Local users</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Login,ID,Name,Home,Shell</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/LOCAL_USERS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/LOCAL_GROUPS">
    <h3>Local groups</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">ID,Name</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/LOCAL_GROUPS"/>
    </table>
</xsl:if>

<hr/>

<table border="1px">
    <tr>
        <td><a href="#summary">summary</a></td>
        <td><a href="#hardware">hardware</a></td>
        <td><a href="#software">software</a></td>
        <td><a href="#users">users</a></td>
        <td>environment</td>
    </tr>
</table>

<h2><a name="environment">Environment</a></h2>

<xsl:if test="CONTENT/ENVS">
    <h3>Environment variables</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">Name,Value</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/ENVS"/>
    </table>
</xsl:if>

<xsl:if test="CONTENT/PROCESSES">
    <h3>Processes</h3>
    <table>
        <xsl:call-template name="headers">
            <xsl:with-param name="columns">User,PID,CPUusage,Memory,Virtualmemory,TTY,Started,Command</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="CONTENT/PROCESSES"/>
    </table>
</xsl:if>

</body>
</html>
</xsl:template>

<xsl:template match="ANTIVIRUS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="COMPANY"/></td>
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="GUID"/></td>
    <td><xsl:value-of select="ENABLED"/></td>
    <td><xsl:value-of select="UPTODATE"/></td>
    <td><xsl:value-of select="VERSION"/></td>
</tr>
</xsl:template>

<xsl:template match="BATTERIES">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
</tr>
</xsl:template>

<xsl:template match="CONTROLLERS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="CAPTION"/></td>
    <td><xsl:value-of select="DRIVER"/></td>
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="MANUFACTURER"/></td>
    <td><xsl:value-of select="PCICLASS"/></td>
    <td><xsl:value-of select="VENDORID"/></td>
    <td><xsl:value-of select="PRODUCTID"/></td>
    <td><xsl:value-of select="PCISUBSYSTEM"/></td>
    <td><xsl:value-of select="PCISLOT"/></td>
    <td><xsl:value-of select="TYPE"/></td>
    <td><xsl:value-of select="REV"/></td>
</tr>
</xsl:template>

<xsl:template match="CPUS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="CACHE"/></td>
    <td><xsl:value-of select="CORE"/></td>
    <td><xsl:value-of select="DESCRIPTION"/></td>
    <td><xsl:value-of select="MANUFACTURER"/></td>
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="THREAD"/></td>
    <td><xsl:value-of select="SERIAL"/></td>
    <td><xsl:value-of select="STEPPING"/></td>
    <td><xsl:value-of select="FAMILYNAME"/></td>
    <td><xsl:value-of select="FAMILYNUMBER"/></td>
    <td><xsl:value-of select="MODEL"/></td>
    <td><xsl:value-of select="SPEED"/></td>
    <td><xsl:value-of select="ID"/></td>
    <td><xsl:value-of select="EXTERNAL_CLOCK"/></td>
    <td><xsl:value-of select="ARCH"/></td>
</tr>
</xsl:template>

<xsl:template match="DRIVES">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="CREATEDATE"/></td>
    <td><xsl:value-of select="DESCRIPTION"/></td>
    <td><xsl:value-of select="FREE"/></td>
    <td><xsl:value-of select="FILESYSTEM"/></td>
    <td><xsl:value-of select="LABEL"/></td>
    <td><xsl:value-of select="LETTER"/></td>
    <td><xsl:value-of select="SERIAL"/></td>
    <td><xsl:value-of select="SYSTEMDRIVE"/></td>
    <td><xsl:value-of select="TOTAL"/></td>
    <td><xsl:value-of select="TYPE"/></td>
    <td><xsl:value-of select="VOLUMN"/></td>
</tr>
</xsl:template>

<xsl:template match="ENVS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="KEY"/></td>
    <td><xsl:value-of select="VAL"/></td>
</tr>
</xsl:template>

<xsl:template match="INPUTS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="MANUFACTURER"/></td>
    <td><xsl:value-of select="CAPTION"/></td>
    <td><xsl:value-of select="DESCRIPTION"/></td>
    <td><xsl:value-of select="INTERFACE"/></td>
    <td><xsl:value-of select="LAYOUT"/></td>
    <td><xsl:value-of select="POINTINGTYPE"/></td>
    <td><xsl:value-of select="TYPE"/></td>
</tr>
</xsl:template>

<xsl:template match="MEMORIES">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="CAPACITY"/></td>
    <td><xsl:value-of select="CAPTION"/></td>
    <td><xsl:value-of select="FORMFACTOR"/></td>
    <td><xsl:value-of select="REMOVABLE"/></td>
    <td><xsl:value-of select="PURPOSE"/></td>
    <td><xsl:value-of select="SPEED"/></td>
    <td><xsl:value-of select="SERIALNUMBER"/></td>
    <td><xsl:value-of select="TYPE"/></td>
    <td><xsl:value-of select="DESCRIPTION"/></td>
    <td><xsl:value-of select="NUMSLOTS"/></td>
    <td><xsl:value-of select="MEMORYCORRECTION"/></td>
    <td><xsl:value-of select="MANUFACTURER"/></td>
</tr>
</xsl:template>

<xsl:template match="MONITORS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="BASE64"/></td>
    <td><xsl:value-of select="CAPTION"/></td>
    <td><xsl:value-of select="DESCRIPTION"/></td>
    <td><xsl:value-of select="MANUFACTURER"/></td>
    <td><xsl:value-of select="SERIAL"/></td>
    <td><xsl:value-of select="UUENCODE"/></td>
</tr>
</xsl:template>

<xsl:template match="NETWORKS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
</tr>
</xsl:template>

<xsl:template match="PORTS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
</tr>
</xsl:template>

<xsl:template match="PROCESSES">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="USER"/></td>
    <td><xsl:value-of select="PID"/></td>
    <td><xsl:value-of select="CPUUSAGE"/></td>
    <td><xsl:value-of select="MEM"/></td>
    <td><xsl:value-of select="VIRTUALMEMORY"/></td>
    <td><xsl:value-of select="TTY"/></td>
    <td><xsl:value-of select="STARTED"/></td>
    <td><xsl:value-of select="CMD"/></td>
</tr>
</xsl:template>

<xsl:template match="SLOTS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
</tr>
</xsl:template>

<xsl:template match="SOFTWARES">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="COMMENTS"/></td>
    <td><xsl:value-of select="FILESIZE"/></td>
    <td><xsl:value-of select="FOLDER"/></td>
    <td><xsl:value-of select="FROM"/></td>
    <td><xsl:value-of select="HELPLINK"/></td>
    <td><xsl:value-of select="INSTALLDATE"/></td>
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="NO_REMOVE"/></td>
    <td><xsl:value-of select="RELEASE_TYPE"/></td>
    <td><xsl:value-of select="PUBLISHER"/></td>
    <td><xsl:value-of select="UNINSTALL_STRING"/></td>
    <td><xsl:value-of select="URL_INFO_ABOUT"/></td>
    <td><xsl:value-of select="VERSION"/></td>
    <td><xsl:value-of select="VERSION_MINOR"/></td>
    <td><xsl:value-of select="VERSION_MAJOR"/></td>
    <td><xsl:value-of select="GUID"/></td>
    <td><xsl:value-of select="ARCH"/></td>
    <td><xsl:value-of select="USERNAME"/></td>
    <td><xsl:value-of select="USERID"/></td>
</tr>
</xsl:template>

<xsl:template match="SOUNDS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="CAPTION"/></td>
    <td><xsl:value-of select="DESCRIPTION"/></td>
    <td><xsl:value-of select="MANUFACTURER"/></td>
    <td><xsl:value-of select="NAME"/></td>
</tr>
</xsl:template>

<xsl:template match="STORAGES">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="DESCRIPTION"/></td>
    <td><xsl:value-of select="DISKSIZE"/></td>
    <td><xsl:value-of select="INTERFACE"/></td>
    <td><xsl:value-of select="MANUFACTURER"/></td>
    <td><xsl:value-of select="MODEL"/></td>
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="TYPE"/></td>
    <td><xsl:value-of select="SERIAL"/></td>
    <td><xsl:value-of select="SERIALNUMBER"/></td>
    <td><xsl:value-of select="FIRMWARE"/></td>
    <td><xsl:value-of select="SCSI_COID"/></td>
    <td><xsl:value-of select="SCSI_CHID"/></td>
    <td><xsl:value-of select="SCSI_UNID"/></td>
    <td><xsl:value-of select="SCSI_LUN"/></td>
    <td><xsl:value-of select="WWN"/></td>
</tr>
</xsl:template>

<xsl:template match="LOCAL_GROUPS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="ID"/></td>
    <td><xsl:value-of select="NAME"/></td>
</tr>
</xsl:template>

<xsl:template match="LOCAL_USERS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="ID"/></td>
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="LOGIN"/></td>
    <td><xsl:value-of select="HOME"/></td>
    <td><xsl:value-of select="SHELL"/></td>
</tr>
</xsl:template>

<xsl:template match="USERS">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="LOGIN"/></td>
</tr>
</xsl:template>

<xsl:template match="VIRTUALMACHINES">
<xsl:variable name="parity">
    <xsl:call-template name="parity"/>
</xsl:variable>
<tr class="{$parity}">
    <td><xsl:value-of select="NAME"/></td>
    <td><xsl:value-of select="STATUS"/></td>
    <td><xsl:value-of select="SUBSYSTEM"/></td>
    <td><xsl:value-of select="UUID"/></td>
    <td><xsl:value-of select="MEMORY"/></td>
    <td><xsl:value-of select="VCPU"/></td>
    <td><xsl:value-of select="VMTYPE"/></td>
</tr>
</xsl:template>

<xsl:template name="headers">
<xsl:param name="columns"/>
<tr>
    <xsl:for-each select="str:tokenize($columns, ',')">
        <th><xsl:value-of select="."/></th>
    </xsl:for-each>
</tr>
</xsl:template>

<xsl:template name="parity">
    <xsl:choose>
        <xsl:when test="position() mod 2 = 0">
            <xsl:text>even</xsl:text>
        </xsl:when>
        <xsl:otherwise>
            <xsl:text>odd</xsl:text>
        </xsl:otherwise>
    </xsl:choose>
</xsl:template>

</xsl:stylesheet>
