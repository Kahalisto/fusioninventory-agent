#!/usr/bin/perl

use strict;
use warnings;
use lib './lib';

use English qw(-no_match_vars);
use Getopt::Long;
use Pod::Usage;

use FusionInventory::Agent;
use FusionInventory::Agent::Task::WakeOnLan;
use FusionInventory::Agent::Tools::Network;

my %setup = (
    confdir => './etc',
    datadir => './share',
    libdir  => './lib',
    vardir  => './var',
);

my $options = {
    ethernet => 1,
    udp      => 1,
};

GetOptions(
    $options,
    'mac=s',
    'ethernet!',
    'udp!',
    'debug+',
    'help',
    'version',
) or pod2usage(-verbose => 0);

if ($options->{version}) {
  print "WakeOnLan task $FusionInventory::Agent::Task::WakeOnLan::VERSION\n";
  exit 0;
}
pod2usage(-verbose => 0, -exitval => 0) if $options->{help};
pod2usage(
    -message => "no mac address given, aborting\n", -verbose => 0
) unless $options->{mac};
pod2usage(
    -message => "invalid mac address given, aborting\n", -verbose => 0
) if $options->{mac} !~ /^$mac_address_pattern$/;

my $agent = FusionInventory::Agent->new(%setup);

my $task = FusionInventory::Agent::Task::WakeOnLan->new(
    config   => $agent->{config},
    confdir  => $agent->{confdir},
    datadir  => $agent->{datadir},
    logger   => $agent->{logger},
    deviceid => $agent->{deviceid},
);

$task->setParam('addresses', $options->{addresses});
$task->setParam('ethernet',  $options->{ethernet});
$task->setParam('udp',       $options->{udp});

eval {
    $agent->init(options => $options);
    $agent->runSingleTask(task => $task);
};

__END__

=head1 NAME

fusioninventory-wakeonlan - Standalone wake-on-lan

=head1 SYNOPSIS

fusioninventory-wakeonlan [options]

  Options:
    --mac=MAC         target mac address
    --ethernet        use ethenet method if available (true)
    --udp             use udp method (true)
    --debug           debug output (execution traces)
    -h --help         print this message and exit
    --version         print the task version and exit

=head1 DESCRIPTION

F<fusioninventory-wakeonlan> allows to run a wakeonlan task without a GLPI
server.
